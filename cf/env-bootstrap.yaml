Description: >
  This Template deploys a VPC in one region spread over Two AZs
  2 Priv Subnets 
  2 Pub Subnets
  
  Pre-req: 
    - A S3 Bucket setup to store the templates
    - A EC2 KeyPair
Parameters:
    
    TemplateBucketURL:
      Description: HTTPS URL to S3 Bucket storing the templates used.  
      Type: String

    KeyPairName:
      Description: A EC2 KeyPair
      Type: AWS:EC2::KeyPair::KeyName

Resources:

    VPC:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub ${TemplateBucketURL}infrastructure/vpc.yaml
            Parameters:
                EnvironmentName:    !Ref AWS::StackName
                VpcCIDR:            10.180.0.0/16
                PublicSubnet1CIDR:  10.180.8.0/21
                PublicSubnet2CIDR:  10.180.16.0/21
                PrivateSubnet1CIDR: 10.180.24.0/21
                PrivateSubnet2CIDR: 10.180.32.0/21

    SecurityGroups:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub ${TemplateBucketURL}infrastructure/security-groups.yaml
            Parameters: 
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC

    BastionHosts:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub ${TemplateBucketURL}infrastructure/linux-bastion.yaml
            Parameters:
              EnvironmentName: !Ref AWS::StackName
              VPC: !GetAtt VPC.Outputs.VPC
              Subnets: !GetAtt VPC.Outputs.PublicSubnets
              SecurityGroup: !GetAtt SecurityGroups.Outputs.SSHSecurityGroup
              KeyPairName: !Ref KeyPairName

Outputs:
    
    VPCStack:
        Description: The VPC CF Stack, to reference outputs
        Value: !Ref VPC

    VPCId:
        Description: The VPC Id
        Value: !GetAtt VPC.Outputs.VPC
        Export: !Join ["", !Ref AWS::StackName, "-vpcid"]

    SecurityGroupsStack:
        Description: The SecurityGroups Stack, to reference outputs
        Value: !Ref SecurityGroups
